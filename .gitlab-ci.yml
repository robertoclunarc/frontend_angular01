image: node:12

stages:
    - build
    - containerization
    - deploy

Var_stage:
    stage: build
    before_script:
        -   |
            if [ "$CI_COMMIT_REF_NAME" == "master" ]; then
              BUILD_TAG= "${CI_PROJECT_NAME}_prod"
              echo "Es la rama Master ($BUILD_TAG)"
            else
              BUILD_TAG= "${CI_PROJECT_NAME}_dev"
              echo "Es la rama desarrollo ($BUILD_TAG)"
            fi
        -   |
            if [ "$CI_COMMIT_REF_NAME" == "master" ]; then
              CONFIG= $CONFIG_PROD
            else
              CONFIG= $CONFIG_DESA
            fi
    variables:
        SHA: $CI_COMMIT_SHORT_SHA
    script:
        - echo $BUILD_TAG
        - echo $CI_COMMIT_REF_NAME
        - echo $CONFIG


build_image:
    stage: build
    before_script:
        -   |
            if ["$CI_COMMIT_REF_NAME" == "master"]; then
              BUILD_TAG= "${CI_PROJECT_NAME}_prod"
            else
              BUILD_TAG= "${CI_PROJECT_NAME}_dev"
            fi
        -   |
            if ["$CI_COMMIT_REF_NAME" == "master"]; then
              CONFIG= $CONFIG_PROD
            else
              CONFIG= $CONFIG_DESA
            fi
    variables:
        SHA: $CI_COMMIT_SHORT_SHA
    script:
        - docker build --build-arg config=$CONFIG -t $BUILD_TAG .

#register the image
register_image:
    stage: containerization
    variables:
        SHA: $CI_COMMIT_SHORT_SHA
        BUILD_TAG: ${CI_PROJECT_NAME}_${CI_COMMIT_BRANCH}
    script:
        - docker tag $BUILD_TAG $DOCKER_SERVER/$BUILD_TAG:$SHA
        - docker tag $BUILD_TAG $DOCKER_SERVER/$BUILD_TAG:latest
        - docker push $DOCKER_SERVER/$BUILD_TAG:$SHA
        - docker push $DOCKER_SERVER/$BUILD_TAG:latest
    only:
        - master

deploy_to_desarrollo:
    stage: deploy
    script:
        - docker run $BUILD_TAG -p 80:80 -d
    only:
        - desarrollo
    tags:
        - desarrollo


deploy_to_prod:
    stage: deploy
    script:
        - docker pull $DOCKER_SERVER/$CI_PROJECT_NAME:latest
        #- docker stop $CI_PROJECT_NAME && docker rm $CI_PROJECT_NAME
        - docker stop node_compras-test && docker rm node_compras-test
        - | 
            docker run -d --name node_compras-test -p $APP_PORT:$APP_PORT -e MYSQL_SERVER=$PROD_MYSQL_SERVER 
            -e MYSQL_USER=$DESA_MYSQL_USER -e MYSQL_PW=$DESA_MYSQL_PASS -e MYSQL_DB=$DESA_MYSQL_DB 
            -e MYSQL_PORT=$DESA_MYSQL_PORT -e APP_PORT=$APP_PORT --restart always $DOCKER_SERVER/$CI_PROJECT_NAME
    only:
        - master
    when: manual
    tags:
        - master
