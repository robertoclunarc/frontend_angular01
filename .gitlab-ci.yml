image: node:12

stages:
    - build
    - containerization
    - deploy

build_image:
    stage: build
    before_script:
        - BUILD_TAG="${BUILD_TAG_D}" && CONFIG="$CONFIG_DESA"
        - test "$CI_COMMIT_REF_NAME" == "master" && BUILD_TAG="${BUILD_TAG_P}" && CONFIG="$CONFIG_PROD" 
        - test "$CI_COMMIT_REF_NAME" == "qas" && BUILD_TAG="${BUILD_TAG_Q}" && CONFIG="$CONFIG_QAS" 
        - echo "Branch ($CI_COMMIT_REF_NAME), Build tag ($BUILD_TAG), building with $CONFIG args"
    script:
        - docker build --build-arg config=$CONFIG -t $BUILD_TAG .

#register the image only on Master Branch
register_image:
    stage: containerization
    before_script:
        - BUILD_TAG="${BUILD_TAG_D}" && CONFIG="$CONFIG_DESA" && echo "Es la rama Desarrollo ($BUILD_TAG)"
        - test "$CI_COMMIT_REF_NAME" == "master" && BUILD_TAG="${BUILD_TAG_P}" && CONFIG="$CONFIG_PROD" && echo "Es la rama Master ($BUILD_TAG)"
        - test "$CI_COMMIT_REF_NAME" == "qas" && BUILD_TAG="${BUILD_TAG_Q}" && CONFIG="$CONFIG_QAS" && echo "Es la rama QAS ($BUILD_TAG)"

    variables:
        SHA: $CI_COMMIT_SHORT_SHA
        REGISTER_TAG: ${CI_PROJECT_NAME}_${CI_COMMIT_BRANCH}
    script:
        - docker tag $BUILD_TAG $DOCKER_SERVER/$REGISTER_TAG:$SHA
        - docker tag $BUILD_TAG $DOCKER_SERVER/$REGISTER_TAG:latest
        - docker push $DOCKER_SERVER/$REGISTER_TAG:$SHA
        - docker push $DOCKER_SERVER/$REGISTER_TAG:latest
    only:
        - master

deploy_to_desarrollo:
    stage: deploy
    script:
        - docker run $BUILD_TAG -p 80:80 -d
    only:
        - desarrollo
    tags:
        - desarrollo


deploy_to_prod:
    stage: deploy
    variables:
        REGISTER_TAG: ${CI_PROJECT_NAME}_${CI_COMMIT_BRANCH}
    script:
        - docker stop $REGISTER_TAG && docker rm $REGISTER_TAG
        - docker pull $DOCKER_SERVER/$REGISTER_TAG:latest
        - docker run $REGISTER_TAG -p 80:80 -d
    only:
        - master
    when: manual
    tags:
        - master
