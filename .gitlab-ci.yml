image: node:12

stages:
    - build
    - containerization
    - deploy

Var_stage:
    stage: build
    before_script:
        - test "$CI_COMMIT_REF_NAME" == "master" && BUILD_TAG="${CI_PROJECT_NAME}_prod" && CONFIG="$CONFIG_PROD" && echo "Es la rama Master ($BUILD_TAG)"
        - test "$CI_COMMIT_REF_NAME" == "desarrollo" && BUILD_TAG="${CI_PROJECT_NAME}_dev" && CONFIG="$CONFIG_DEV" && echo "Es la rama Desarrollo ($BUILD_TAG)"
        - test "$CI_COMMIT_REF_NAME" == "qas" && BUILD_TAG="${CI_PROJECT_NAME}_qas" && CONFIG="$CONFIG_QAS" && echo "Es la rama QAS ($BUILD_TAG)"
    variables:
        SHA: $CI_COMMIT_SHORT_SHA
    script:
        - echo $BUILD_TAG
        - echo $CI_COMMIT_REF_NAME
        - echo $CONFIG
        - echo $SHA

build_image:
    stage: build
    script:
        - echo $BUILD_TAG
        - echo $CI_COMMIT_REF_NAME
        - echo $CONFIG
        - echo $SHA
        - docker build --build-arg config=$CONFIG -t $BUILD_TAG .

#register the image only on Master Branch
register_image:
    stage: containerization
    variables:
        SHA: $CI_COMMIT_SHORT_SHA
        BUILD_TAG: ${CI_PROJECT_NAME}_${CI_COMMIT_BRANCH}
    script:
        - docker tag $BUILD_TAG $DOCKER_SERVER/$BUILD_TAG:$SHA
        - docker tag $BUILD_TAG $DOCKER_SERVER/$BUILD_TAG:latest
        - docker push $DOCKER_SERVER/$BUILD_TAG:$SHA
        - docker push $DOCKER_SERVER/$BUILD_TAG:latest
    only:
        - master

deploy_to_desarrollo:
    stage: deploy
    script:
        - docker run $BUILD_TAG -p 80:80 -d
    only:
        - desarrollo
    tags:
        - desarrollo


deploy_to_prod:
    stage: deploy
    variables:
        BUILD_TAG: ${CI_PROJECT_NAME}_${CI_COMMIT_BRANCH}
    script:
        - docker pull $DOCKER_SERVER/$BUILD_TAG:latest
        - docker stop $BUILD_TAG && docker rm $BUILD_TAG
        - docker stop node_compras-test && docker rm node_compras-test
        - docker run $BUILD_TAG -p 80:80 -d
    only:
        - master
    when: manual
    tags:
        - master
